/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.degoo.libjingle4j.proxy;

public class ReceiverCallback {
  private long swigCPtr;
  private boolean swigCMemOwn;

  private ReceiverCallback(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(ReceiverCallback obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        LibjingleDataTransferJNI.delete_ReceiverCallback(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  public void swigReleaseOwnership() {
    swigCMemOwn = false;
    LibjingleDataTransferJNI.ReceiverCallback_change_ownership(this, swigCPtr, false);
  }

  public void swigTakeOwnership() {
    swigCMemOwn = true;
    LibjingleDataTransferJNI.ReceiverCallback_change_ownership(this, swigCPtr, true);
  }

  public void onLoggedIn(String nodeID) {
    if (getClass() == ReceiverCallback.class) LibjingleDataTransferJNI.ReceiverCallback_onLoggedIn(swigCPtr, this, nodeID); else LibjingleDataTransferJNI.ReceiverCallback_onLoggedInSwigExplicitReceiverCallback(swigCPtr, this, nodeID);
  }

  public void onLoggedOut(String nodeID) {
    if (getClass() == ReceiverCallback.class) LibjingleDataTransferJNI.ReceiverCallback_onLoggedOut(swigCPtr, this, nodeID); else LibjingleDataTransferJNI.ReceiverCallback_onLoggedOutSwigExplicitReceiverCallback(swigCPtr, this, nodeID);
  }

  public void onLoginFailed(String nodeID, ErrorCode errCode, String errDesc) {
    if (getClass() == ReceiverCallback.class) LibjingleDataTransferJNI.ReceiverCallback_onLoginFailed(swigCPtr, this, nodeID, errCode.swigValue(), errDesc); else LibjingleDataTransferJNI.ReceiverCallback_onLoginFailedSwigExplicitReceiverCallback(swigCPtr, this, nodeID, errCode.swigValue(), errDesc);
  }

  public void onDataReceived(byte[] BYTE, long len, String remoteNodeID) {
    if (getClass() == ReceiverCallback.class) LibjingleDataTransferJNI.ReceiverCallback_onDataReceived(swigCPtr, this, BYTE, len, remoteNodeID); else LibjingleDataTransferJNI.ReceiverCallback_onDataReceivedSwigExplicitReceiverCallback(swigCPtr, this, BYTE, len, remoteNodeID);
  }

  public void onDataReceiveFailed(String remoteNodeID, ErrorCode errCode, String errDesc) {
    if (getClass() == ReceiverCallback.class) LibjingleDataTransferJNI.ReceiverCallback_onDataReceiveFailed(swigCPtr, this, remoteNodeID, errCode.swigValue(), errDesc); else LibjingleDataTransferJNI.ReceiverCallback_onDataReceiveFailedSwigExplicitReceiverCallback(swigCPtr, this, remoteNodeID, errCode.swigValue(), errDesc);
  }

  public void onDataSent(String remoteNodeID) {
    if (getClass() == ReceiverCallback.class) LibjingleDataTransferJNI.ReceiverCallback_onDataSent(swigCPtr, this, remoteNodeID); else LibjingleDataTransferJNI.ReceiverCallback_onDataSentSwigExplicitReceiverCallback(swigCPtr, this, remoteNodeID);
  }

  public void onDataSentFailed(String remoteNodeID, ErrorCode errCode, String errDesc) {
    if (getClass() == ReceiverCallback.class) LibjingleDataTransferJNI.ReceiverCallback_onDataSentFailed(swigCPtr, this, remoteNodeID, errCode.swigValue(), errDesc); else LibjingleDataTransferJNI.ReceiverCallback_onDataSentFailedSwigExplicitReceiverCallback(swigCPtr, this, remoteNodeID, errCode.swigValue(), errDesc);
  }

  public ReceiverCallback() {
    this(LibjingleDataTransferJNI.new_ReceiverCallback(), true);
    LibjingleDataTransferJNI.ReceiverCallback_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

}
