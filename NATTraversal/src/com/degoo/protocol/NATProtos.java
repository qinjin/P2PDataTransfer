// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: NATProtos.proto

package com.degoo.protocol;

public final class NATProtos {
  private NATProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public enum NetworkErrorCode
      implements com.google.protobuf.ProtocolMessageEnum {
    NoError(0, 0),
    MalformedID(1, 1),
    StreamErrors(2, 2),
    NotifiedTunnelErrors(3, 3),
    InvalidReceiver(4, 4),
    ReceiverUnavailable(5, 5),
    SessionTimeOut(6, 6),
    SessionErrors(7, 7),
    ServerNotConnected(8, 8),
    InvalidNATInfo(9, 9),
    ;
    
    public static final int NoError_VALUE = 0;
    public static final int MalformedID_VALUE = 1;
    public static final int StreamErrors_VALUE = 2;
    public static final int NotifiedTunnelErrors_VALUE = 3;
    public static final int InvalidReceiver_VALUE = 4;
    public static final int ReceiverUnavailable_VALUE = 5;
    public static final int SessionTimeOut_VALUE = 6;
    public static final int SessionErrors_VALUE = 7;
    public static final int ServerNotConnected_VALUE = 8;
    public static final int InvalidNATInfo_VALUE = 9;
    
    
    public final int getNumber() { return value; }
    
    public static NetworkErrorCode valueOf(int value) {
      switch (value) {
        case 0: return NoError;
        case 1: return MalformedID;
        case 2: return StreamErrors;
        case 3: return NotifiedTunnelErrors;
        case 4: return InvalidReceiver;
        case 5: return ReceiverUnavailable;
        case 6: return SessionTimeOut;
        case 7: return SessionErrors;
        case 8: return ServerNotConnected;
        case 9: return InvalidNATInfo;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<NetworkErrorCode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<NetworkErrorCode>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<NetworkErrorCode>() {
            public NetworkErrorCode findValueByNumber(int number) {
              return NetworkErrorCode.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.degoo.protocol.NATProtos.getDescriptor().getEnumTypes().get(0);
    }
    
    private static final NetworkErrorCode[] VALUES = {
      NoError, MalformedID, StreamErrors, NotifiedTunnelErrors, InvalidReceiver, ReceiverUnavailable, SessionTimeOut, SessionErrors, ServerNotConnected, InvalidNATInfo, 
    };
    
    public static NetworkErrorCode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private NetworkErrorCode(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:com.degoo.protocol.NetworkErrorCode)
  }
  
  public interface NodeStatusMessageOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional .com.degoo.protocol.NodeID node_id = 1;
    boolean hasNodeId();
    com.degoo.protocol.CommonProtos.NodeID getNodeId();
    com.degoo.protocol.CommonProtos.NodeIDOrBuilder getNodeIdOrBuilder();
    
    // optional .com.degoo.protocol.NetworkErrorCode error_code = 2;
    boolean hasErrorCode();
    com.degoo.protocol.NATProtos.NetworkErrorCode getErrorCode();
  }
  public static final class NodeStatusMessage extends
      com.google.protobuf.GeneratedMessage
      implements NodeStatusMessageOrBuilder {
    // Use NodeStatusMessage.newBuilder() to construct.
    private NodeStatusMessage(Builder builder) {
      super(builder);
    }
    private NodeStatusMessage(boolean noInit) {}
    
    private static final NodeStatusMessage defaultInstance;
    public static NodeStatusMessage getDefaultInstance() {
      return defaultInstance;
    }
    
    public NodeStatusMessage getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.degoo.protocol.NATProtos.internal_static_com_degoo_protocol_NodeStatusMessage_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.degoo.protocol.NATProtos.internal_static_com_degoo_protocol_NodeStatusMessage_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional .com.degoo.protocol.NodeID node_id = 1;
    public static final int NODE_ID_FIELD_NUMBER = 1;
    private com.degoo.protocol.CommonProtos.NodeID nodeId_;
    public boolean hasNodeId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public com.degoo.protocol.CommonProtos.NodeID getNodeId() {
      return nodeId_;
    }
    public com.degoo.protocol.CommonProtos.NodeIDOrBuilder getNodeIdOrBuilder() {
      return nodeId_;
    }
    
    // optional .com.degoo.protocol.NetworkErrorCode error_code = 2;
    public static final int ERROR_CODE_FIELD_NUMBER = 2;
    private com.degoo.protocol.NATProtos.NetworkErrorCode errorCode_;
    public boolean hasErrorCode() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public com.degoo.protocol.NATProtos.NetworkErrorCode getErrorCode() {
      return errorCode_;
    }
    
    private void initFields() {
      nodeId_ = com.degoo.protocol.CommonProtos.NodeID.getDefaultInstance();
      errorCode_ = com.degoo.protocol.NATProtos.NetworkErrorCode.NoError;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, nodeId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, errorCode_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, nodeId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, errorCode_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.degoo.protocol.NATProtos.NodeStatusMessage)) {
        return super.equals(obj);
      }
      com.degoo.protocol.NATProtos.NodeStatusMessage other = (com.degoo.protocol.NATProtos.NodeStatusMessage) obj;
      
      boolean result = true;
      result = result && (hasNodeId() == other.hasNodeId());
      if (hasNodeId()) {
        result = result && getNodeId()
            .equals(other.getNodeId());
      }
      result = result && (hasErrorCode() == other.hasErrorCode());
      if (hasErrorCode()) {
        result = result &&
            (getErrorCode() == other.getErrorCode());
      }
      result = result &&
          getUnknownFields().equals(other.getUnknownFields());
      return result;
    }
    
    @java.lang.Override
    public int hashCode() {
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasNodeId()) {
        hash = (37 * hash) + NODE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getNodeId().hashCode();
      }
      if (hasErrorCode()) {
        hash = (37 * hash) + ERROR_CODE_FIELD_NUMBER;
        hash = (53 * hash) + hashEnum(getErrorCode());
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      return hash;
    }
    
    public static com.degoo.protocol.NATProtos.NodeStatusMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.degoo.protocol.NATProtos.NodeStatusMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.degoo.protocol.NATProtos.NodeStatusMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.degoo.protocol.NATProtos.NodeStatusMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.degoo.protocol.NATProtos.NodeStatusMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.degoo.protocol.NATProtos.NodeStatusMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.degoo.protocol.NATProtos.NodeStatusMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.degoo.protocol.NATProtos.NodeStatusMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.degoo.protocol.NATProtos.NodeStatusMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.degoo.protocol.NATProtos.NodeStatusMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.degoo.protocol.NATProtos.NodeStatusMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.degoo.protocol.NATProtos.NodeStatusMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.degoo.protocol.NATProtos.internal_static_com_degoo_protocol_NodeStatusMessage_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.degoo.protocol.NATProtos.internal_static_com_degoo_protocol_NodeStatusMessage_fieldAccessorTable;
      }
      
      // Construct using com.degoo.protocol.NATProtos.NodeStatusMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getNodeIdFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (nodeIdBuilder_ == null) {
          nodeId_ = com.degoo.protocol.CommonProtos.NodeID.getDefaultInstance();
        } else {
          nodeIdBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        errorCode_ = com.degoo.protocol.NATProtos.NetworkErrorCode.NoError;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.degoo.protocol.NATProtos.NodeStatusMessage.getDescriptor();
      }
      
      public com.degoo.protocol.NATProtos.NodeStatusMessage getDefaultInstanceForType() {
        return com.degoo.protocol.NATProtos.NodeStatusMessage.getDefaultInstance();
      }
      
      public com.degoo.protocol.NATProtos.NodeStatusMessage build() {
        com.degoo.protocol.NATProtos.NodeStatusMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.degoo.protocol.NATProtos.NodeStatusMessage buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.degoo.protocol.NATProtos.NodeStatusMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.degoo.protocol.NATProtos.NodeStatusMessage buildPartial() {
        com.degoo.protocol.NATProtos.NodeStatusMessage result = new com.degoo.protocol.NATProtos.NodeStatusMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (nodeIdBuilder_ == null) {
          result.nodeId_ = nodeId_;
        } else {
          result.nodeId_ = nodeIdBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.errorCode_ = errorCode_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.degoo.protocol.NATProtos.NodeStatusMessage) {
          return mergeFrom((com.degoo.protocol.NATProtos.NodeStatusMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.degoo.protocol.NATProtos.NodeStatusMessage other) {
        if (other == com.degoo.protocol.NATProtos.NodeStatusMessage.getDefaultInstance()) return this;
        if (other.hasNodeId()) {
          mergeNodeId(other.getNodeId());
        }
        if (other.hasErrorCode()) {
          setErrorCode(other.getErrorCode());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              com.degoo.protocol.CommonProtos.NodeID.Builder subBuilder = com.degoo.protocol.CommonProtos.NodeID.newBuilder();
              if (hasNodeId()) {
                subBuilder.mergeFrom(getNodeId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setNodeId(subBuilder.buildPartial());
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              com.degoo.protocol.NATProtos.NetworkErrorCode value = com.degoo.protocol.NATProtos.NetworkErrorCode.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                errorCode_ = value;
              }
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .com.degoo.protocol.NodeID node_id = 1;
      private com.degoo.protocol.CommonProtos.NodeID nodeId_ = com.degoo.protocol.CommonProtos.NodeID.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.degoo.protocol.CommonProtos.NodeID, com.degoo.protocol.CommonProtos.NodeID.Builder, com.degoo.protocol.CommonProtos.NodeIDOrBuilder> nodeIdBuilder_;
      public boolean hasNodeId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public com.degoo.protocol.CommonProtos.NodeID getNodeId() {
        if (nodeIdBuilder_ == null) {
          return nodeId_;
        } else {
          return nodeIdBuilder_.getMessage();
        }
      }
      public Builder setNodeId(com.degoo.protocol.CommonProtos.NodeID value) {
        if (nodeIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          nodeId_ = value;
          onChanged();
        } else {
          nodeIdBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setNodeId(
          com.degoo.protocol.CommonProtos.NodeID.Builder builderForValue) {
        if (nodeIdBuilder_ == null) {
          nodeId_ = builderForValue.build();
          onChanged();
        } else {
          nodeIdBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeNodeId(com.degoo.protocol.CommonProtos.NodeID value) {
        if (nodeIdBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              nodeId_ != com.degoo.protocol.CommonProtos.NodeID.getDefaultInstance()) {
            nodeId_ =
              com.degoo.protocol.CommonProtos.NodeID.newBuilder(nodeId_).mergeFrom(value).buildPartial();
          } else {
            nodeId_ = value;
          }
          onChanged();
        } else {
          nodeIdBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearNodeId() {
        if (nodeIdBuilder_ == null) {
          nodeId_ = com.degoo.protocol.CommonProtos.NodeID.getDefaultInstance();
          onChanged();
        } else {
          nodeIdBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      public com.degoo.protocol.CommonProtos.NodeID.Builder getNodeIdBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getNodeIdFieldBuilder().getBuilder();
      }
      public com.degoo.protocol.CommonProtos.NodeIDOrBuilder getNodeIdOrBuilder() {
        if (nodeIdBuilder_ != null) {
          return nodeIdBuilder_.getMessageOrBuilder();
        } else {
          return nodeId_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          com.degoo.protocol.CommonProtos.NodeID, com.degoo.protocol.CommonProtos.NodeID.Builder, com.degoo.protocol.CommonProtos.NodeIDOrBuilder> 
          getNodeIdFieldBuilder() {
        if (nodeIdBuilder_ == null) {
          nodeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.degoo.protocol.CommonProtos.NodeID, com.degoo.protocol.CommonProtos.NodeID.Builder, com.degoo.protocol.CommonProtos.NodeIDOrBuilder>(
                  nodeId_,
                  getParentForChildren(),
                  isClean());
          nodeId_ = null;
        }
        return nodeIdBuilder_;
      }
      
      // optional .com.degoo.protocol.NetworkErrorCode error_code = 2;
      private com.degoo.protocol.NATProtos.NetworkErrorCode errorCode_ = com.degoo.protocol.NATProtos.NetworkErrorCode.NoError;
      public boolean hasErrorCode() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public com.degoo.protocol.NATProtos.NetworkErrorCode getErrorCode() {
        return errorCode_;
      }
      public Builder setErrorCode(com.degoo.protocol.NATProtos.NetworkErrorCode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        errorCode_ = value;
        onChanged();
        return this;
      }
      public Builder clearErrorCode() {
        bitField0_ = (bitField0_ & ~0x00000002);
        errorCode_ = com.degoo.protocol.NATProtos.NetworkErrorCode.NoError;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.degoo.protocol.NodeStatusMessage)
    }
    
    static {
      defaultInstance = new NodeStatusMessage(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.degoo.protocol.NodeStatusMessage)
  }
  
  public interface NATMessageOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional .com.degoo.protocol.NodeID sender_id = 1;
    boolean hasSenderId();
    com.degoo.protocol.CommonProtos.NodeID getSenderId();
    com.degoo.protocol.CommonProtos.NodeIDOrBuilder getSenderIdOrBuilder();
    
    // optional .com.degoo.protocol.NodeID receiver_id = 2;
    boolean hasReceiverId();
    com.degoo.protocol.CommonProtos.NodeID getReceiverId();
    com.degoo.protocol.CommonProtos.NodeIDOrBuilder getReceiverIdOrBuilder();
    
    // optional bytes data = 3;
    boolean hasData();
    com.google.protobuf.ByteString getData();
    
    // optional .com.degoo.protocol.NetworkErrorCode error_code = 4;
    boolean hasErrorCode();
    com.degoo.protocol.NATProtos.NetworkErrorCode getErrorCode();
  }
  public static final class NATMessage extends
      com.google.protobuf.GeneratedMessage
      implements NATMessageOrBuilder {
    // Use NATMessage.newBuilder() to construct.
    private NATMessage(Builder builder) {
      super(builder);
    }
    private NATMessage(boolean noInit) {}
    
    private static final NATMessage defaultInstance;
    public static NATMessage getDefaultInstance() {
      return defaultInstance;
    }
    
    public NATMessage getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.degoo.protocol.NATProtos.internal_static_com_degoo_protocol_NATMessage_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.degoo.protocol.NATProtos.internal_static_com_degoo_protocol_NATMessage_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional .com.degoo.protocol.NodeID sender_id = 1;
    public static final int SENDER_ID_FIELD_NUMBER = 1;
    private com.degoo.protocol.CommonProtos.NodeID senderId_;
    public boolean hasSenderId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public com.degoo.protocol.CommonProtos.NodeID getSenderId() {
      return senderId_;
    }
    public com.degoo.protocol.CommonProtos.NodeIDOrBuilder getSenderIdOrBuilder() {
      return senderId_;
    }
    
    // optional .com.degoo.protocol.NodeID receiver_id = 2;
    public static final int RECEIVER_ID_FIELD_NUMBER = 2;
    private com.degoo.protocol.CommonProtos.NodeID receiverId_;
    public boolean hasReceiverId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public com.degoo.protocol.CommonProtos.NodeID getReceiverId() {
      return receiverId_;
    }
    public com.degoo.protocol.CommonProtos.NodeIDOrBuilder getReceiverIdOrBuilder() {
      return receiverId_;
    }
    
    // optional bytes data = 3;
    public static final int DATA_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString data_;
    public boolean hasData() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public com.google.protobuf.ByteString getData() {
      return data_;
    }
    
    // optional .com.degoo.protocol.NetworkErrorCode error_code = 4;
    public static final int ERROR_CODE_FIELD_NUMBER = 4;
    private com.degoo.protocol.NATProtos.NetworkErrorCode errorCode_;
    public boolean hasErrorCode() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public com.degoo.protocol.NATProtos.NetworkErrorCode getErrorCode() {
      return errorCode_;
    }
    
    private void initFields() {
      senderId_ = com.degoo.protocol.CommonProtos.NodeID.getDefaultInstance();
      receiverId_ = com.degoo.protocol.CommonProtos.NodeID.getDefaultInstance();
      data_ = com.google.protobuf.ByteString.EMPTY;
      errorCode_ = com.degoo.protocol.NATProtos.NetworkErrorCode.NoError;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, senderId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, receiverId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, data_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, errorCode_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, senderId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, receiverId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, data_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, errorCode_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.degoo.protocol.NATProtos.NATMessage)) {
        return super.equals(obj);
      }
      com.degoo.protocol.NATProtos.NATMessage other = (com.degoo.protocol.NATProtos.NATMessage) obj;
      
      boolean result = true;
      result = result && (hasSenderId() == other.hasSenderId());
      if (hasSenderId()) {
        result = result && getSenderId()
            .equals(other.getSenderId());
      }
      result = result && (hasReceiverId() == other.hasReceiverId());
      if (hasReceiverId()) {
        result = result && getReceiverId()
            .equals(other.getReceiverId());
      }
      result = result && (hasData() == other.hasData());
      if (hasData()) {
        result = result && getData()
            .equals(other.getData());
      }
      result = result && (hasErrorCode() == other.hasErrorCode());
      if (hasErrorCode()) {
        result = result &&
            (getErrorCode() == other.getErrorCode());
      }
      result = result &&
          getUnknownFields().equals(other.getUnknownFields());
      return result;
    }
    
    @java.lang.Override
    public int hashCode() {
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasSenderId()) {
        hash = (37 * hash) + SENDER_ID_FIELD_NUMBER;
        hash = (53 * hash) + getSenderId().hashCode();
      }
      if (hasReceiverId()) {
        hash = (37 * hash) + RECEIVER_ID_FIELD_NUMBER;
        hash = (53 * hash) + getReceiverId().hashCode();
      }
      if (hasData()) {
        hash = (37 * hash) + DATA_FIELD_NUMBER;
        hash = (53 * hash) + getData().hashCode();
      }
      if (hasErrorCode()) {
        hash = (37 * hash) + ERROR_CODE_FIELD_NUMBER;
        hash = (53 * hash) + hashEnum(getErrorCode());
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      return hash;
    }
    
    public static com.degoo.protocol.NATProtos.NATMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.degoo.protocol.NATProtos.NATMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.degoo.protocol.NATProtos.NATMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.degoo.protocol.NATProtos.NATMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.degoo.protocol.NATProtos.NATMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.degoo.protocol.NATProtos.NATMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.degoo.protocol.NATProtos.NATMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.degoo.protocol.NATProtos.NATMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.degoo.protocol.NATProtos.NATMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.degoo.protocol.NATProtos.NATMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.degoo.protocol.NATProtos.NATMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.degoo.protocol.NATProtos.NATMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.degoo.protocol.NATProtos.internal_static_com_degoo_protocol_NATMessage_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.degoo.protocol.NATProtos.internal_static_com_degoo_protocol_NATMessage_fieldAccessorTable;
      }
      
      // Construct using com.degoo.protocol.NATProtos.NATMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSenderIdFieldBuilder();
          getReceiverIdFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (senderIdBuilder_ == null) {
          senderId_ = com.degoo.protocol.CommonProtos.NodeID.getDefaultInstance();
        } else {
          senderIdBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (receiverIdBuilder_ == null) {
          receiverId_ = com.degoo.protocol.CommonProtos.NodeID.getDefaultInstance();
        } else {
          receiverIdBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        data_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        errorCode_ = com.degoo.protocol.NATProtos.NetworkErrorCode.NoError;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.degoo.protocol.NATProtos.NATMessage.getDescriptor();
      }
      
      public com.degoo.protocol.NATProtos.NATMessage getDefaultInstanceForType() {
        return com.degoo.protocol.NATProtos.NATMessage.getDefaultInstance();
      }
      
      public com.degoo.protocol.NATProtos.NATMessage build() {
        com.degoo.protocol.NATProtos.NATMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.degoo.protocol.NATProtos.NATMessage buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.degoo.protocol.NATProtos.NATMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.degoo.protocol.NATProtos.NATMessage buildPartial() {
        com.degoo.protocol.NATProtos.NATMessage result = new com.degoo.protocol.NATProtos.NATMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (senderIdBuilder_ == null) {
          result.senderId_ = senderId_;
        } else {
          result.senderId_ = senderIdBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (receiverIdBuilder_ == null) {
          result.receiverId_ = receiverId_;
        } else {
          result.receiverId_ = receiverIdBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.data_ = data_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.errorCode_ = errorCode_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.degoo.protocol.NATProtos.NATMessage) {
          return mergeFrom((com.degoo.protocol.NATProtos.NATMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.degoo.protocol.NATProtos.NATMessage other) {
        if (other == com.degoo.protocol.NATProtos.NATMessage.getDefaultInstance()) return this;
        if (other.hasSenderId()) {
          mergeSenderId(other.getSenderId());
        }
        if (other.hasReceiverId()) {
          mergeReceiverId(other.getReceiverId());
        }
        if (other.hasData()) {
          setData(other.getData());
        }
        if (other.hasErrorCode()) {
          setErrorCode(other.getErrorCode());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              com.degoo.protocol.CommonProtos.NodeID.Builder subBuilder = com.degoo.protocol.CommonProtos.NodeID.newBuilder();
              if (hasSenderId()) {
                subBuilder.mergeFrom(getSenderId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSenderId(subBuilder.buildPartial());
              break;
            }
            case 18: {
              com.degoo.protocol.CommonProtos.NodeID.Builder subBuilder = com.degoo.protocol.CommonProtos.NodeID.newBuilder();
              if (hasReceiverId()) {
                subBuilder.mergeFrom(getReceiverId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setReceiverId(subBuilder.buildPartial());
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              data_ = input.readBytes();
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              com.degoo.protocol.NATProtos.NetworkErrorCode value = com.degoo.protocol.NATProtos.NetworkErrorCode.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                errorCode_ = value;
              }
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .com.degoo.protocol.NodeID sender_id = 1;
      private com.degoo.protocol.CommonProtos.NodeID senderId_ = com.degoo.protocol.CommonProtos.NodeID.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.degoo.protocol.CommonProtos.NodeID, com.degoo.protocol.CommonProtos.NodeID.Builder, com.degoo.protocol.CommonProtos.NodeIDOrBuilder> senderIdBuilder_;
      public boolean hasSenderId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public com.degoo.protocol.CommonProtos.NodeID getSenderId() {
        if (senderIdBuilder_ == null) {
          return senderId_;
        } else {
          return senderIdBuilder_.getMessage();
        }
      }
      public Builder setSenderId(com.degoo.protocol.CommonProtos.NodeID value) {
        if (senderIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          senderId_ = value;
          onChanged();
        } else {
          senderIdBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setSenderId(
          com.degoo.protocol.CommonProtos.NodeID.Builder builderForValue) {
        if (senderIdBuilder_ == null) {
          senderId_ = builderForValue.build();
          onChanged();
        } else {
          senderIdBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeSenderId(com.degoo.protocol.CommonProtos.NodeID value) {
        if (senderIdBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              senderId_ != com.degoo.protocol.CommonProtos.NodeID.getDefaultInstance()) {
            senderId_ =
              com.degoo.protocol.CommonProtos.NodeID.newBuilder(senderId_).mergeFrom(value).buildPartial();
          } else {
            senderId_ = value;
          }
          onChanged();
        } else {
          senderIdBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearSenderId() {
        if (senderIdBuilder_ == null) {
          senderId_ = com.degoo.protocol.CommonProtos.NodeID.getDefaultInstance();
          onChanged();
        } else {
          senderIdBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      public com.degoo.protocol.CommonProtos.NodeID.Builder getSenderIdBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getSenderIdFieldBuilder().getBuilder();
      }
      public com.degoo.protocol.CommonProtos.NodeIDOrBuilder getSenderIdOrBuilder() {
        if (senderIdBuilder_ != null) {
          return senderIdBuilder_.getMessageOrBuilder();
        } else {
          return senderId_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          com.degoo.protocol.CommonProtos.NodeID, com.degoo.protocol.CommonProtos.NodeID.Builder, com.degoo.protocol.CommonProtos.NodeIDOrBuilder> 
          getSenderIdFieldBuilder() {
        if (senderIdBuilder_ == null) {
          senderIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.degoo.protocol.CommonProtos.NodeID, com.degoo.protocol.CommonProtos.NodeID.Builder, com.degoo.protocol.CommonProtos.NodeIDOrBuilder>(
                  senderId_,
                  getParentForChildren(),
                  isClean());
          senderId_ = null;
        }
        return senderIdBuilder_;
      }
      
      // optional .com.degoo.protocol.NodeID receiver_id = 2;
      private com.degoo.protocol.CommonProtos.NodeID receiverId_ = com.degoo.protocol.CommonProtos.NodeID.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.degoo.protocol.CommonProtos.NodeID, com.degoo.protocol.CommonProtos.NodeID.Builder, com.degoo.protocol.CommonProtos.NodeIDOrBuilder> receiverIdBuilder_;
      public boolean hasReceiverId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public com.degoo.protocol.CommonProtos.NodeID getReceiverId() {
        if (receiverIdBuilder_ == null) {
          return receiverId_;
        } else {
          return receiverIdBuilder_.getMessage();
        }
      }
      public Builder setReceiverId(com.degoo.protocol.CommonProtos.NodeID value) {
        if (receiverIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          receiverId_ = value;
          onChanged();
        } else {
          receiverIdBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder setReceiverId(
          com.degoo.protocol.CommonProtos.NodeID.Builder builderForValue) {
        if (receiverIdBuilder_ == null) {
          receiverId_ = builderForValue.build();
          onChanged();
        } else {
          receiverIdBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder mergeReceiverId(com.degoo.protocol.CommonProtos.NodeID value) {
        if (receiverIdBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              receiverId_ != com.degoo.protocol.CommonProtos.NodeID.getDefaultInstance()) {
            receiverId_ =
              com.degoo.protocol.CommonProtos.NodeID.newBuilder(receiverId_).mergeFrom(value).buildPartial();
          } else {
            receiverId_ = value;
          }
          onChanged();
        } else {
          receiverIdBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder clearReceiverId() {
        if (receiverIdBuilder_ == null) {
          receiverId_ = com.degoo.protocol.CommonProtos.NodeID.getDefaultInstance();
          onChanged();
        } else {
          receiverIdBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      public com.degoo.protocol.CommonProtos.NodeID.Builder getReceiverIdBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getReceiverIdFieldBuilder().getBuilder();
      }
      public com.degoo.protocol.CommonProtos.NodeIDOrBuilder getReceiverIdOrBuilder() {
        if (receiverIdBuilder_ != null) {
          return receiverIdBuilder_.getMessageOrBuilder();
        } else {
          return receiverId_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          com.degoo.protocol.CommonProtos.NodeID, com.degoo.protocol.CommonProtos.NodeID.Builder, com.degoo.protocol.CommonProtos.NodeIDOrBuilder> 
          getReceiverIdFieldBuilder() {
        if (receiverIdBuilder_ == null) {
          receiverIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.degoo.protocol.CommonProtos.NodeID, com.degoo.protocol.CommonProtos.NodeID.Builder, com.degoo.protocol.CommonProtos.NodeIDOrBuilder>(
                  receiverId_,
                  getParentForChildren(),
                  isClean());
          receiverId_ = null;
        }
        return receiverIdBuilder_;
      }
      
      // optional bytes data = 3;
      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasData() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        data_ = value;
        onChanged();
        return this;
      }
      public Builder clearData() {
        bitField0_ = (bitField0_ & ~0x00000004);
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }
      
      // optional .com.degoo.protocol.NetworkErrorCode error_code = 4;
      private com.degoo.protocol.NATProtos.NetworkErrorCode errorCode_ = com.degoo.protocol.NATProtos.NetworkErrorCode.NoError;
      public boolean hasErrorCode() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public com.degoo.protocol.NATProtos.NetworkErrorCode getErrorCode() {
        return errorCode_;
      }
      public Builder setErrorCode(com.degoo.protocol.NATProtos.NetworkErrorCode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        errorCode_ = value;
        onChanged();
        return this;
      }
      public Builder clearErrorCode() {
        bitField0_ = (bitField0_ & ~0x00000008);
        errorCode_ = com.degoo.protocol.NATProtos.NetworkErrorCode.NoError;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.degoo.protocol.NATMessage)
    }
    
    static {
      defaultInstance = new NATMessage(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.degoo.protocol.NATMessage)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_degoo_protocol_NodeStatusMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_degoo_protocol_NodeStatusMessage_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_degoo_protocol_NATMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_degoo_protocol_NATMessage_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\017NATProtos.proto\022\022com.degoo.protocol\032\022C" +
      "ommonProtos.proto\"z\n\021NodeStatusMessage\022+" +
      "\n\007node_id\030\001 \001(\0132\032.com.degoo.protocol.Nod" +
      "eID\0228\n\nerror_code\030\002 \001(\0162$.com.degoo.prot" +
      "ocol.NetworkErrorCode\"\264\001\n\nNATMessage\022-\n\t" +
      "sender_id\030\001 \001(\0132\032.com.degoo.protocol.Nod" +
      "eID\022/\n\013receiver_id\030\002 \001(\0132\032.com.degoo.pro" +
      "tocol.NodeID\022\014\n\004data\030\003 \001(\014\0228\n\nerror_code" +
      "\030\004 \001(\0162$.com.degoo.protocol.NetworkError" +
      "Code*\335\001\n\020NetworkErrorCode\022\013\n\007NoError\020\000\022\017",
      "\n\013MalformedID\020\001\022\020\n\014StreamErrors\020\002\022\030\n\024Not" +
      "ifiedTunnelErrors\020\003\022\023\n\017InvalidReceiver\020\004" +
      "\022\027\n\023ReceiverUnavailable\020\005\022\022\n\016SessionTime" +
      "Out\020\006\022\021\n\rSessionErrors\020\007\022\026\n\022ServerNotCon" +
      "nected\020\010\022\022\n\016InvalidNATInfo\020\tB\031\n\022com.dego" +
      "o.protocolH\001\240\001\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_degoo_protocol_NodeStatusMessage_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_degoo_protocol_NodeStatusMessage_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_degoo_protocol_NodeStatusMessage_descriptor,
              new java.lang.String[] { "NodeId", "ErrorCode", },
              com.degoo.protocol.NATProtos.NodeStatusMessage.class,
              com.degoo.protocol.NATProtos.NodeStatusMessage.Builder.class);
          internal_static_com_degoo_protocol_NATMessage_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_com_degoo_protocol_NATMessage_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_degoo_protocol_NATMessage_descriptor,
              new java.lang.String[] { "SenderId", "ReceiverId", "Data", "ErrorCode", },
              com.degoo.protocol.NATProtos.NATMessage.class,
              com.degoo.protocol.NATProtos.NATMessage.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.degoo.protocol.CommonProtos.getDescriptor(),
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
